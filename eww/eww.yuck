(defwidget bar []
    (centerbox  :orientation "h"
                (workspaces)
                (sidestuff)
                (systrays)
    )
)

(defwidget workspaces []
  (box :class "workspaces"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :spacing 10
    (button :onclick "niri msg action focus-workspace 1" 1)
    (button :onclick "niri msg action focus-workspace 2" 2)
    (button :onclick "niri msg action focus-workspace 3" 3 )
    (button :onclick "niri msg action focus-workspace 4" 4)
    (button :onclick "niri msg action focus-workspace 5" 5)
    (button :onclick "niri msg action focus-workspace 6" 6)
    (button :onclick "niri msg action focus-workspace 7" 7)
    (button :onclick "niri msg action focus-workspace 8" 8)
    (button :onclick "niri msg action focus-workspace 9" 9)))


(defwidget systrays []
    (box    :class "wrap"
        (systray    :spacing 6
                    :space-evenly true
                    :class "sysmenu"
        )
    )
)

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (metric :label "ðŸ”Š"
            :value volume
            :onchange "amixer -D pulse sset Master {}%")
    (metric :label "ï¡š"
            :value {EWW_RAM.used_mem_perc}
            :onchange "")
    (metric :label "ðŸ’¾"
            :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
            :onchange "")
    time))


(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "" ? "ðŸŽµ${music}" : ""}))


(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))



(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll volume :interval "1s"
  "scripts/getvol")

(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")















(defwindow bar
           :monitor 0
           :geometry (geometry :x "0.25%"
                               :y "0.25%"
                               :width "99.5%"
                               :height "10px"
                               :anchor "top center")
           :stacking "fg"
           :exclusive true
           :focusable false
           :namespace "bar"
  (bar))
